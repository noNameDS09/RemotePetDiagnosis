{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/middleware.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\nimport { jwtVerify } from 'jose';\n\nconst JWT_SECRET_KEY = process.env.JWT_SECRET;\n\nasync function verifyToken(token: string) {\n  if (!JWT_SECRET_KEY) {\n    console.error('JWT_SECRET environment variable is not set.');\n    return false;\n  }\n  try {\n    const secret = new TextEncoder().encode(JWT_SECRET_KEY);\n    await jwtVerify(token, secret);\n    return true;\n  } catch (error) {\n    console.warn('Token verification failed:', error instanceof Error ? error.message : error);\n    return false;\n  }\n}\n\nexport async function middleware(request: NextRequest) {\n  const { pathname } = request.nextUrl;\n  const tokenCookie = request.cookies.get('auth_token');\n  const token = tokenCookie?.value;\n\n  // Allow access to static files and auth API routes without token check\n  if (\n    pathname.startsWith('/_next') ||\n    pathname.startsWith('/api/auth') || // Allows both /api/auth/login and /api/auth/signup\n    pathname.endsWith('.png') ||\n    pathname.endsWith('.jpg') ||\n    pathname.endsWith('.jpeg') ||\n    pathname.endsWith('.gif') ||\n    pathname.endsWith('.svg') ||\n    pathname.endsWith('.ico')\n  ) {\n    return NextResponse.next();\n  }\n  \n  const isLoginPage = pathname === '/login';\n  const isSignupPage = pathname === '/signup';\n\n  if (token) {\n    const isValidToken = await verifyToken(token);\n    if (isValidToken) {\n      // If logged in and trying to access login or signup page, redirect to home\n      if (isLoginPage || isSignupPage) {\n        return NextResponse.redirect(new URL('/', request.url));\n      }\n      // Allow access to other pages\n      return NextResponse.next();\n    } else {\n      // Invalid token, clear it\n      const response = (isLoginPage || isSignupPage)\n        ? NextResponse.next() // Allow staying on login/signup page if token is invalid\n        : NextResponse.redirect(new URL('/login', request.url));\n      response.cookies.delete('auth_token');\n      return response;\n    }\n  } else {\n    // No token\n    // Allow access to login and signup pages if no token\n    if (isLoginPage || isSignupPage) {\n      return NextResponse.next();\n    }\n    // Redirect to login for any other protected page\n    return NextResponse.redirect(new URL('/login', request.url));\n  }\n}\n\nexport const config = {\n  matcher: [\n    /*\n     * Match all request paths except for the ones starting with:\n     * - _next/static (static files)\n     * - _next/image (image optimization files)\n     * - favicon.ico (favicon file)\n     * Match all paths to apply token check, then specifically allow some paths inside the middleware.\n     */\n    '/((?!_next/static|_next/image|favicon.ico).*)',\n  ],\n};\n"],"names":[],"mappings":";;;;AAAA;AAAA;AACA;;;AAEA,MAAM,iBAAiB,QAAQ,GAAG,CAAC,UAAU;AAE7C,eAAe,YAAY,KAAa;IACtC,IAAI,CAAC,gBAAgB;QACnB,QAAQ,KAAK,CAAC;QACd,OAAO;IACT;IACA,IAAI;QACF,MAAM,SAAS,IAAI,cAAc,MAAM,CAAC;QACxC,MAAM,CAAA,GAAA,gKAAA,CAAA,YAAS,AAAD,EAAE,OAAO;QACvB,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,IAAI,CAAC,8BAA8B,iBAAiB,QAAQ,MAAM,OAAO,GAAG;QACpF,OAAO;IACT;AACF;AAEO,eAAe,WAAW,OAAoB;IACnD,MAAM,EAAE,QAAQ,EAAE,GAAG,QAAQ,OAAO;IACpC,MAAM,cAAc,QAAQ,OAAO,CAAC,GAAG,CAAC;IACxC,MAAM,QAAQ,aAAa;IAE3B,uEAAuE;IACvE,IACE,SAAS,UAAU,CAAC,aACpB,SAAS,UAAU,CAAC,gBAAgB,mDAAmD;IACvF,SAAS,QAAQ,CAAC,WAClB,SAAS,QAAQ,CAAC,WAClB,SAAS,QAAQ,CAAC,YAClB,SAAS,QAAQ,CAAC,WAClB,SAAS,QAAQ,CAAC,WAClB,SAAS,QAAQ,CAAC,SAClB;QACA,OAAO,6LAAA,CAAA,eAAY,CAAC,IAAI;IAC1B;IAEA,MAAM,cAAc,aAAa;IACjC,MAAM,eAAe,aAAa;IAElC,IAAI,OAAO;QACT,MAAM,eAAe,MAAM,YAAY;QACvC,IAAI,cAAc;YAChB,2EAA2E;YAC3E,IAAI,eAAe,cAAc;gBAC/B,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,KAAK,QAAQ,GAAG;YACvD;YACA,8BAA8B;YAC9B,OAAO,6LAAA,CAAA,eAAY,CAAC,IAAI;QAC1B,OAAO;YACL,0BAA0B;YAC1B,MAAM,WAAW,AAAC,eAAe,eAC7B,6LAAA,CAAA,eAAY,CAAC,IAAI,GAAG,yDAAyD;eAC7E,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,UAAU,QAAQ,GAAG;YACvD,SAAS,OAAO,CAAC,MAAM,CAAC;YACxB,OAAO;QACT;IACF,OAAO;QACL,WAAW;QACX,qDAAqD;QACrD,IAAI,eAAe,cAAc;YAC/B,OAAO,6LAAA,CAAA,eAAY,CAAC,IAAI;QAC1B;QACA,iDAAiD;QACjD,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,UAAU,QAAQ,GAAG;IAC5D;AACF;AAEO,MAAM,SAAS;IACpB,SAAS;QACP;;;;;;KAMC,GACD;KACD;AACH"}}]
}